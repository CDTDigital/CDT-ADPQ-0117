// WARNING: DO NOT EDIT THIS FILE. THIS FILE IS MANAGED BY SPRING ROO.
// You may push code into the target .java compilation unit if you wish to edit any member(s).

package com.stanfieldsystems.web;

import com.stanfieldsystems.CustomerOrder;
import com.stanfieldsystems.OrderProduct;
import com.stanfieldsystems.service.api.CustomerOrderService;
import com.stanfieldsystems.service.api.OrderProductService;
import com.stanfieldsystems.web.CustomerOrdersCollectionThymeleafController;
import com.stanfieldsystems.web.CustomerOrdersItemOrderProductsThymeleafController;
import io.springlets.data.domain.GlobalSearch;
import io.springlets.data.web.datatables.Datatables;
import io.springlets.data.web.datatables.DatatablesData;
import io.springlets.data.web.datatables.DatatablesPageable;
import io.springlets.web.NotFoundException;
import java.util.Collections;
import java.util.Iterator;
import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.context.MessageSource;
import org.springframework.context.i18n.LocaleContextHolder;
import org.springframework.data.domain.Page;
import org.springframework.http.MediaType;
import org.springframework.http.ResponseEntity;
import org.springframework.stereotype.Controller;
import org.springframework.ui.Model;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.ModelAttribute;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.servlet.ModelAndView;
import org.springframework.web.util.UriComponents;

privileged aspect CustomerOrdersItemOrderProductsThymeleafController_Roo_Thymeleaf {
    
    declare @type: CustomerOrdersItemOrderProductsThymeleafController: @Controller;
    
    declare @type: CustomerOrdersItemOrderProductsThymeleafController: @RequestMapping(value = "/customerorders/{customerOrder}/orderProducts", name = "CustomerOrdersItemOrderProductsThymeleafController", produces = MediaType.TEXT_HTML_VALUE);
    
    /**
     * TODO Auto-generated attribute documentation
     */
    public MessageSource CustomerOrdersItemOrderProductsThymeleafController.messageSource;
    
    /**
     * TODO Auto-generated constructor documentation
     * 
     * @param customerOrderService
     * @param orderProductService
     * @param messageSource
     */
    @Autowired
    public CustomerOrdersItemOrderProductsThymeleafController.new(CustomerOrderService customerOrderService, OrderProductService orderProductService, MessageSource messageSource) {
        this.customerOrderService = customerOrderService;
        this.orderProductService = orderProductService;
        this.messageSource = messageSource;
    }

    /**
     * TODO Auto-generated method documentation
     * 
     * @param id
     * @return CustomerOrder
     */
    @ModelAttribute
    public CustomerOrder CustomerOrdersItemOrderProductsThymeleafController.getCustomerOrder(@PathVariable("customerOrder") Long id) {
        CustomerOrder customerOrder = customerOrderService.findOne(id);
        if (customerOrder == null) {
            throw new NotFoundException(String.format("CustomerOrder with identifier '%s' not found",id));
        }
        return customerOrder;
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CustomerOrdersItemOrderProductsThymeleafController.populateFormats(Model model) {
        model.addAttribute("application_locale", LocaleContextHolder.getLocale().getLanguage());
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param model
     */
    public void CustomerOrdersItemOrderProductsThymeleafController.populateForm(Model model) {
        populateFormats(model);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param search
     * @param pageable
     * @param draw
     * @return ResponseEntity
     */
    @GetMapping(name = "datatables", produces = Datatables.MEDIA_TYPE, value = "/dt")
    @ResponseBody
    public ResponseEntity<DatatablesData<OrderProduct>> CustomerOrdersItemOrderProductsThymeleafController.datatables(@ModelAttribute CustomerOrder customerOrder, GlobalSearch search, DatatablesPageable pageable, @RequestParam("draw") Integer draw) {
        
        Page<OrderProduct> orderProducts = orderProductService.findByCustomerOrder(customerOrder, search, pageable);
        long totalOrderProductsCount = orderProductService.countByCustomerOrder(customerOrder);
        DatatablesData<OrderProduct> data =  new DatatablesData<OrderProduct>(orderProducts, totalOrderProductsCount, draw);
        
        for (OrderProduct orderProduct : orderProducts) {
			System.out.println(orderProduct.getProduct().getName());
		}
        return ResponseEntity.ok(data);
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param CustomerOrder
     * @param model
     * @return ModelAndView
     */
    @GetMapping(value = "/create-form", name = "createForm")
    public ModelAndView CustomerOrdersItemOrderProductsThymeleafController.createForm(@ModelAttribute CustomerOrder CustomerOrder, Model model) {
        populateForm(model);
        
        model.addAttribute(new OrderProduct());
        return new ModelAndView("customerorders/orderProducts/create");
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param orderProductsToRemove
     * @return ResponseEntity
     */
    @DeleteMapping(name = "removeFromOrderProducts", value = "/{orderProductsToRemove}")
    @ResponseBody
    public ResponseEntity<?> CustomerOrdersItemOrderProductsThymeleafController.removeFromOrderProducts(@ModelAttribute CustomerOrder customerOrder, @PathVariable("orderProductsToRemove") Long orderProductsToRemove) {
        customerOrderService.removeFromOrderProducts(customerOrder,Collections.singleton(orderProductsToRemove));
        return ResponseEntity.ok().build();
    }
    
    /**
     * TODO Auto-generated method documentation
     * 
     * @param customerOrder
     * @param orderProducts
     * @param model
     * @return ModelAndView
     */
    @PostMapping(name = "create")
    public ModelAndView CustomerOrdersItemOrderProductsThymeleafController.create(@ModelAttribute CustomerOrder customerOrder, @RequestParam("orderProductsIds") List<Long> orderProducts, Model model) {
        // Remove empty values
        for (Iterator<Long> iterator = orderProducts.iterator(); iterator.hasNext();) {
            if (iterator.next() == null) {
                iterator.remove();
            }
        }
        customerOrderService.setOrderProducts(customerOrder,orderProducts);
        UriComponents listURI = CustomerOrdersCollectionThymeleafController.listURI();
        return new ModelAndView("redirect:" + listURI.toUriString());
    }
    
}
